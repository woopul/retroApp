/* eslint-disable  */
// @ts-nocheck

import { DropZone } from '@/components/DropZone';
import Head from 'next/head';
import { useState } from 'react';

export type DraggableItemType = {
  id: string;
  dz_id: string;
};

export default function DnD() {
  const [dropZones, setDropZones] = useState([{ id: 'dz_1' }, { id: 'dz_2' }, { id: 'dz_3' }]);
  const [draggables, setDraggables] = useState<DraggableItemType>([{ id: 'd_1', dz_id: 'dz_1' }]);

  const addDraggable = (dz_id: string) =>
    setDraggables([...draggables, { dz_id, id: `d_${draggables.length + 1}` }]);

  const updateDraggable = (updatedItem: DraggableItemType) => {
    const updatedDraggables = [...draggables].map((item) =>
      item.id === updatedItem.id ? updatedItem : item,
    );
    setDraggables(updatedDraggables);
  };

  return (
    <>
      <Head>
        <title>Retro App - Draggable</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <h1 className="pt-16 text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
          <span className="text-[hsl(280,100%,70%)]">Draggable</span> Poc
        </h1>
        <div className="flex gap-5 pt-16">
          {dropZones.map(({ id }) => (
            <DropZone
              items={draggables.filter(({ dz_id }) => dz_id === id)}
              className="h-screen w-[300px]"
              addDraggable={() => addDraggable(id)}
              id={id}
              updateDraggable={updateDraggable}
            />
          ))}
        </div>
      </main>
    </>
  );
}
