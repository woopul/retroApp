/* eslint-disable  */
// @ts-nocheck

import { signIn, signOut, useSession } from 'next-auth/react';
import Head from 'next/head';

import { api } from '@/utils/api';

export default function Draggable() {
  let dragged = null;

  return (
    <>
      <Head>
        <title>Retro App - Draggable</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <h1 className="pt-16 text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
          <span className="text-[hsl(280,100%,70%)]">Draggable</span> Poc
        </h1>
        <div className="grid h-screen grid-cols-3 gap-5 pt-16">
          <div className="flex h-full flex-col gap-2 bg-white/5">
            <div
              // fires once when dragging is started
              onDragEnd={(e) => console.log('dragEnd', e)}
              // fires once when draggable is returned to its original position
              onDragStart={(e) => {
                dragged = e.target;
                console.log('dragStart', e);
              }}
              draggable
              className="flex h-20 max-w-xs flex-col justify-center gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
            >
              <h3 className="text-2xl font-bold">Grab this and move</h3>
            </div>
          </div>
          <div
            // fires every mouse move when over the field
            onDragOver={(e) => {
              e.preventDefault();
              // console.log('dragOver', e);
            }}
            // fires once when mouse enters the field
            onDragEnter={(e) => {
              e.preventDefault();

              e.target.classList.toggle('bg-white/20');
              console.log('dragEnter', e);
            }}
            // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets
            // both of those above - onDragOver and onDragEnter need to be set with e.preventDefault() in order for onDrop to work
            // fires once when releasing over the field
            onDrop={(e) => {
              // prevent default action (open as link for some elements)
              e.preventDefault();
              dragged.parentNode.removeChild(dragged);
              e.target.appendChild(dragged);
              console.log('drop', e);
            }}
            // fires once when mouse leaves the field
            onDragLeave={(e) => console.log('dragLeave', e)}
            className="flex h-full flex-col gap-2 bg-white/5"
          ></div>
          <div className="flex h-full flex-col gap-2 bg-white/5"></div>
        </div>
      </main>
    </>
  );
}
